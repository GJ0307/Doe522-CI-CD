name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, pdo, pdo_mysql

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Generate application key
      run: php artisan key:generate

    - name: Run migrations
      run: php artisan migrate --force

    - name: Build assets (if applicable)
      run: npm install && npm run production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: public/build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '11.0.0'
        extensions: mbstring, pdo, pdo_mysql

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - name: Run tests
      run: php artisan test

    - name: Run code quality checks
      run: composer require --dev phpstan/phpstan && ./vendor/bin/phpstan analyse

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, pdo, pdo_mysql

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-interaction --no-dev

    - name: Deploy to staging
      run: |
        # Commands to deploy to your staging environment
        echo "Deploying to staging environment"

    - name: Notify success
      if: success()
      run: echo "Deployment to staging successful!" | tee success.log

    - name: Upload success log
      uses: actions/upload-artifact@v3
      with:
        name: deployment-success-log
        path: success.log

  notify:
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()

    steps:
    - name: Send notification
      run: echo "Build or deployment failed! Please check the logs." | tee failure.log

    - name: Upload failure log
      uses: actions/upload-artifact@v3
      with:
        name: failure-log
        path: failure.log
